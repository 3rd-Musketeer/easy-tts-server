name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
        exclude:
          # Exclude some combinations to reduce CI time while maintaining good coverage
          - os: macos-latest
            python-version: "3.11"
          - os: windows-latest
            python-version: "3.11"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync

    - name: Install spaCy models
      run: |
        uv run python -m spacy download en_core_web_sm
        uv run python -m spacy download zh_core_web_sm

    - name: Run tests
      run: |
        uv run pytest tests/ -v --tb=short

    - name: Run import tests
      run: |
        uv run python -c "from easy_tts_server import create_tts_engine, TextSegmenter, segment_text; print('âœ“ All imports successful')"

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync
        uv add --dev ruff black isort mypy

    - name: Run ruff (linting)
      run: |
        uv run ruff check src/ tests/

    - name: Run black (formatting check)
      run: |
        uv run black --check src/ tests/

    - name: Run isort (import sorting check)
      run: |
        uv run isort --check-only src/ tests/

    - name: Run mypy (type checking)
      run: |
        uv run mypy src/ --ignore-missing-imports

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Build package
      run: |
        uv build

    - name: Check package
      run: |
        uv add --dev twine
        uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7 